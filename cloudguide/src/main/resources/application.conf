akka {
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = cluster

    # Prefer explicit serialization; bind our marker interface to Jackson CBOR
    allow-java-serialization = off
    warn-about-java-serializer-usage = on

    serialization-bindings {
      "com.cloudguide.CborSerializable" = jackson-cbor
    }
  }

  # Jackson serializers must be objects (can stay empty)
  serialization.jackson {
    jackson-cbor { }
  }

  remote.artery {
    transport = tcp
    canonical.hostname = ${?HOST}     # e.g., 127.0.0.1
    canonical.port     = ${?PORT}     # e.g., 2551 or 2552
  }

  cluster {
    # IMPORTANT: must match ActorSystem name in Boot.java
    seed-nodes = [
      "akka://CloudGuideSystem@127.0.0.1:2551",
      "akka://CloudGuideSystem@127.0.0.1:2552"
    ]

    # Provide per-node role at runtime: -DROLE=api or -DROLE=llm
    roles = [ ${?ROLE} ]

    # Optional: log cluster events more verbosely (handy during dev)
    log-info = on
    log-info-verbose = on

    # For a two-node local cluster, 1 is okay; you can set 2 if you prefer stricter startup
    min-nr-of-members = 1

    # OPTIONAL Split Brain Resolver (fine to keep; safe defaults)
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    split-brain-resolver {
      active-strategy = keep-majority
      stable-after = 7s
    }
  }
}
